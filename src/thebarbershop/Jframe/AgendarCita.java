/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package thebarbershop.Jframe;
import java.text.ParseException;
import java.util.Date; // Para el JCalendar
import java.text.SimpleDateFormat; // Para formatear la fecha a String
import javax.swing.JOptionPane; // Para los mensajes emergentes
import thebarbershop.utilidades.CitaDAO;
import java.util.Calendar;
import java.util.List;
import thebarbershop.utilidades.EstiloCorteDAO;
/**
 *
 * @author jaelj
 */
public class AgendarCita extends javax.swing.JFrame {
    
    private final String emailUsuario;
    
    public AgendarCita(String email) {
        this.emailUsuario = email;
        initComponents();

        // Configuración inicial
        jTPdescripcion.setEditable(false);
        jScrollPane2.setVisible(false); // Esto es clave: oculta el panel de descripción
        Jcalendario.addPropertyChangeListener(this::JcalendarioPropertyChange);
        setLocationRelativeTo(null);

        // Cargar datos
        CitaDAO.cargarBarberos(JComboElegirbarbero);
        CitaDAO.cargarServicios(JcomboTipodeservicio);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel11 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        JLTituloAgendarcita = new javax.swing.JLabel();
        JcomboTipodeservicio = new javax.swing.JComboBox<>();
        JLtipodeservicio = new javax.swing.JLabel();
        JSPnotasadicionales = new javax.swing.JScrollPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        JLnotasadicionales = new javax.swing.JLabel();
        txtGuardarFecha = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTPdescripcion = new javax.swing.JTextPane();
        JBcancelar = new javax.swing.JButton();
        JBagendarcita = new javax.swing.JButton();
        JComboElegirbarbero = new javax.swing.JComboBox<>();
        JLElegirbarbero = new javax.swing.JLabel();
        JLfechadelacita = new javax.swing.JLabel();
        JComboHORA = new javax.swing.JComboBox<>();
        JLhora = new javax.swing.JLabel();
        JComboLugarcita = new javax.swing.JComboBox<>();
        JLlugarcita = new javax.swing.JLabel();
        Jcalendario = new com.toedter.calendar.JCalendar();
        jButton1 = new javax.swing.JButton();
        JLfondo = new javax.swing.JLabel();

        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/images/peluqueria(1).png")));

        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/images/imagenn(1).jpg")));

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("TheBarberShop - Agendar Cita");
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setPreferredSize(new java.awt.Dimension(920, 500));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        JLTituloAgendarcita.setFont(new java.awt.Font("Copperplate Gothic Bold", 0, 48)); // NOI18N
        JLTituloAgendarcita.setForeground(new java.awt.Color(255, 255, 255));
        JLTituloAgendarcita.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        JLTituloAgendarcita.setText("Agenda tu cita");
        JLTituloAgendarcita.setToolTipText("");
        jPanel1.add(JLTituloAgendarcita, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 30, 530, -1));

        JcomboTipodeservicio.setBackground(new java.awt.Color(153, 153, 153));
        JcomboTipodeservicio.setFont(new java.awt.Font("Copperplate Gothic Light", 0, 14)); // NOI18N
        JcomboTipodeservicio.setForeground(new java.awt.Color(0, 0, 0));
        JcomboTipodeservicio.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione Servicio...", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10" }));
        JcomboTipodeservicio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JcomboTipodeservicioActionPerformed(evt);
            }
        });
        jPanel1.add(JcomboTipodeservicio, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 140, 230, 50));

        JLtipodeservicio.setFont(new java.awt.Font("Copperplate Gothic Light", 1, 14)); // NOI18N
        JLtipodeservicio.setForeground(new java.awt.Color(255, 255, 255));
        JLtipodeservicio.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        JLtipodeservicio.setText("Tipo de servicio:");
        jPanel1.add(JLtipodeservicio, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 110, 230, 30));

        JSPnotasadicionales.setToolTipText("");
        JSPnotasadicionales.setViewportBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jTextArea1.setBackground(new java.awt.Color(153, 153, 153));
        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jTextArea1.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                jTextArea1AncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        jScrollPane1.setViewportView(jTextArea1);

        JSPnotasadicionales.setViewportView(jScrollPane1);

        jPanel1.add(JSPnotasadicionales, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 220, 240, 120));

        JLnotasadicionales.setFont(new java.awt.Font("Copperplate Gothic Light", 1, 14)); // NOI18N
        JLnotasadicionales.setForeground(new java.awt.Color(255, 255, 255));
        JLnotasadicionales.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        JLnotasadicionales.setText("Notas adicionales");
        jPanel1.add(JLnotasadicionales, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 190, 190, 30));

        txtGuardarFecha.setFont(new java.awt.Font("Copperplate Gothic Light", 0, 12)); // NOI18N
        txtGuardarFecha.setEnabled(false);
        jPanel1.add(txtGuardarFecha, new org.netbeans.lib.awtextra.AbsoluteConstraints(615, 140, 210, 30));

        jScrollPane2.setEnabled(false);
        jScrollPane2.setViewportView(jTPdescripcion);

        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 200, 220, 130));

        JBcancelar.setBackground(new java.awt.Color(153, 0, 51));
        JBcancelar.setFont(new java.awt.Font("Copperplate Gothic Bold", 0, 14)); // NOI18N
        JBcancelar.setForeground(new java.awt.Color(255, 255, 255));
        JBcancelar.setText("Cancelar");
        JBcancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBcancelarActionPerformed(evt);
            }
        });
        jPanel1.add(JBcancelar, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 460, 140, 30));

        JBagendarcita.setBackground(new java.awt.Color(51, 102, 0));
        JBagendarcita.setFont(new java.awt.Font("Copperplate Gothic Bold", 0, 14)); // NOI18N
        JBagendarcita.setForeground(new java.awt.Color(255, 255, 255));
        JBagendarcita.setText("Agendar");
        JBagendarcita.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBagendarcitaActionPerformed(evt);
            }
        });
        jPanel1.add(JBagendarcita, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 460, 140, 30));

        JComboElegirbarbero.setBackground(new java.awt.Color(153, 153, 153));
        JComboElegirbarbero.setFont(new java.awt.Font("Copperplate Gothic Light", 0, 14)); // NOI18N
        JComboElegirbarbero.setForeground(new java.awt.Color(0, 0, 0));
        JComboElegirbarbero.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione Barbero...", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10" }));
        JComboElegirbarbero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JComboElegirbarberoActionPerformed(evt);
            }
        });
        jPanel1.add(JComboElegirbarbero, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 370, 230, 50));

        JLElegirbarbero.setFont(new java.awt.Font("Copperplate Gothic Light", 1, 14)); // NOI18N
        JLElegirbarbero.setForeground(new java.awt.Color(255, 255, 255));
        JLElegirbarbero.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        JLElegirbarbero.setText("Seleccione Barbero:");
        jPanel1.add(JLElegirbarbero, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 340, 230, 30));

        JLfechadelacita.setFont(new java.awt.Font("Copperplate Gothic Light", 1, 14)); // NOI18N
        JLfechadelacita.setForeground(new java.awt.Color(255, 255, 255));
        JLfechadelacita.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        JLfechadelacita.setText("Fecha de la Cita:");
        jPanel1.add(JLfechadelacita, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 110, 330, 30));

        JComboHORA.setBackground(new java.awt.Color(153, 153, 153));
        JComboHORA.setFont(new java.awt.Font("Copperplate Gothic Light", 0, 14)); // NOI18N
        JComboHORA.setForeground(new java.awt.Color(0, 0, 0));
        JComboHORA.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione hora...", "09:00 AM", "10:00 AM", "11:00 AM", "12:00 PM", "03:00 PM", "04:00 PM", "05:00 PM", "06:00 PM", "08:00 PM", "09:00 PM", "10:00 PM" }));
        JComboHORA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JComboHORAActionPerformed(evt);
            }
        });
        jPanel1.add(JComboHORA, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 370, 230, 50));

        JLhora.setFont(new java.awt.Font("Copperplate Gothic Light", 1, 14)); // NOI18N
        JLhora.setForeground(new java.awt.Color(255, 255, 255));
        JLhora.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        JLhora.setText("Hora:");
        jPanel1.add(JLhora, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 340, 230, 30));

        JComboLugarcita.setBackground(new java.awt.Color(153, 153, 153));
        JComboLugarcita.setFont(new java.awt.Font("Copperplate Gothic Light", 0, 14)); // NOI18N
        JComboLugarcita.setForeground(new java.awt.Color(0, 0, 0));
        JComboLugarcita.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccion lugar...", "1", "2", "3", "4", "5", " " }));
        jPanel1.add(JComboLugarcita, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 140, 230, 50));

        JLlugarcita.setFont(new java.awt.Font("Copperplate Gothic Light", 1, 14)); // NOI18N
        JLlugarcita.setForeground(new java.awt.Color(255, 255, 255));
        JLlugarcita.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        JLlugarcita.setText("Lugar de Cita:");
        jPanel1.add(JLlugarcita, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 110, 230, 30));

        Jcalendario.setBackground(new java.awt.Color(51, 51, 51));
        Jcalendario.setForeground(new java.awt.Color(51, 51, 51));
        Jcalendario.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        Jcalendario.setFont(new java.awt.Font("Copperplate Gothic Light", 0, 12)); // NOI18N
        Jcalendario.setSundayForeground(new java.awt.Color(153, 0, 0));
        Jcalendario.setTodayButtonVisible(true);
        Jcalendario.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                JcalendarioPropertyChange(evt);
            }
        });
        jPanel1.add(Jcalendario, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 180, 370, 240));

        jButton1.setBackground(new java.awt.Color(153, 153, 153));
        jButton1.setFont(new java.awt.Font("Copperplate Gothic Bold", 0, 14)); // NOI18N
        jButton1.setForeground(new java.awt.Color(51, 51, 51));
        jButton1.setText("Volver ");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 460, 140, 30));

        JLfondo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/images/imagen10(1).jpg"))); // NOI18N
        jPanel1.add(JLfondo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, 500));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 920, 500));
        jPanel1.getAccessibleContext().setAccessibleName("");
        jPanel1.getAccessibleContext().setAccessibleDescription("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    private void JBcancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBcancelarActionPerformed
        // TODO add your handling code here:
        this.dispose();
        new MenuCliente(emailUsuario).setVisible(true);
    }//GEN-LAST:event_JBcancelarActionPerformed

    private void jTextArea1AncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_jTextArea1AncestorAdded
        
    }//GEN-LAST:event_jTextArea1AncestorAdded

    private void JBagendarcitaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBagendarcitaActionPerformed
            // Validar campos obligatorios
        if (JComboElegirbarbero.getSelectedIndex() <= 0) {
            JOptionPane.showMessageDialog(this, "Seleccione un barbero", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        if (JcomboTipodeservicio.getSelectedIndex() <= 0) {
            JOptionPane.showMessageDialog(this, "Seleccione un servicio", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        if (JComboHORA.getSelectedIndex() <= 0) {
            JOptionPane.showMessageDialog(this, "Seleccione una hora válida", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Obtener fecha del campo de texto
        String fechaStr = txtGuardarFecha.getText();
        if (fechaStr.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Seleccione una fecha", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
        Date fechaSeleccionada;
        try {
            fechaSeleccionada = sdf.parse(fechaStr);
        } catch (ParseException e) {
            JOptionPane.showMessageDialog(this, "Formato de fecha inválido");
            return;
        }

        // Validar que la fecha no sea pasada
        Calendar fechaCita = Calendar.getInstance();
        fechaCita.setTime(fechaSeleccionada);
        fechaCita.set(Calendar.HOUR_OF_DAY, 0);
        fechaCita.set(Calendar.MINUTE, 0);
        fechaCita.set(Calendar.SECOND, 0);
        fechaCita.set(Calendar.MILLISECOND, 0);

        Calendar hoy = Calendar.getInstance();
        hoy.set(Calendar.HOUR_OF_DAY, 0);
        hoy.set(Calendar.MINUTE, 0);
        hoy.set(Calendar.SECOND, 0);
        hoy.set(Calendar.MILLISECOND, 0);

        if (fechaCita.before(hoy)) {
            JOptionPane.showMessageDialog(this, "No puede agendar citas en fechas pasadas", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Obtener datos del formulario
        String barbero = (String) JComboElegirbarbero.getSelectedItem();
        String servicio = (String) JcomboTipodeservicio.getSelectedItem();
        String hora = (String) JComboHORA.getSelectedItem();
        String notas = jTextArea1.getText();

        // Validar que la hora seleccionada no sea un mensaje de error
        if (hora.equals("No trabaja este día") || hora.equals("Sin horarios disponibles")) {
            JOptionPane.showMessageDialog(this, "Seleccione una hora válida", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Agendar cita (el método CitaDAO.agendarCita ya hace las validaciones)
        if (CitaDAO.agendarCita(emailUsuario, barbero, servicio, fechaStr, hora, notas)) {
            JOptionPane.showMessageDialog(this, "Cita agendada con éxito", "Éxito", JOptionPane.INFORMATION_MESSAGE);
            this.dispose();
            new MenuCliente(emailUsuario).setVisible(true);
        } else {
            JOptionPane.showMessageDialog(this, "Error al agendar la cita. Verifique los datos.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_JBagendarcitaActionPerformed

    private void JComboHORAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JComboHORAActionPerformed
        
    }//GEN-LAST:event_JComboHORAActionPerformed

    private void JcomboTipodeservicioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JcomboTipodeservicioActionPerformed
        mostrarInformacionEstilo();
    }//GEN-LAST:event_JcomboTipodeservicioActionPerformed

    private void JComboElegirbarberoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JComboElegirbarberoActionPerformed
        // Limpiar combo de horas
        JComboHORA.removeAllItems();
        JComboHORA.addItem("Seleccione hora...");

        // Si hay fecha seleccionada, cargar horas disponibles
        if (!txtGuardarFecha.getText().isEmpty()) {
            cargarHorasDisponibles();
        }
    }//GEN-LAST:event_JComboElegirbarberoActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        this.dispose();
        new MenuCliente(emailUsuario).setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void JcalendarioPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_JcalendarioPropertyChange
        if ("calendar".equals(evt.getPropertyName())) {
        Date fecha = Jcalendario.getDate();
        if (fecha == null) return;
        
        // Formatear la fecha como String
        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
        String fechaStr = sdf.format(fecha);
        
        // Actualizar el campo de texto
        txtGuardarFecha.setText(fechaStr);
        
        // Si hay un barbero seleccionado, cargar horas disponibles
            if (JComboElegirbarbero.getSelectedIndex() > 0) {
                cargarHorasDisponibles();
            }
        }
    }//GEN-LAST:event_JcalendarioPropertyChange
    
    private void cargarHorasDisponibles() {
    String fechaStr = txtGuardarFecha.getText();
    if (fechaStr.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Primero seleccione una fecha válida.");
        return;
    }
    
    // Convertir texto a fecha
    SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
    Date fecha;
    try {
        fecha = sdf.parse(fechaStr);
    } catch (ParseException e) {
        JOptionPane.showMessageDialog(this, "Formato de fecha inválido");
        return;
    }
    
    Calendar cal = Calendar.getInstance();
    cal.setTime(fecha);
    
    // Obtener día de la semana
    String[] dias = {"", "DOMINGO", "LUNES", "MARTES", "MIERCOLES", "JUEVES", "VIERNES", "SABADOS"};
    String diaSemana = dias[cal.get(Calendar.DAY_OF_WEEK)];

    String barbero = (String) JComboElegirbarbero.getSelectedItem();
    if (barbero == null || barbero.equals("Seleccione Barbero...")) {
        JOptionPane.showMessageDialog(this, "Primero seleccione un barbero.");
        return;
    }

    // Verificar disponibilidad del barbero
    if (!CitaDAO.trabajaDia(barbero, diaSemana)) {
        JOptionPane.showMessageDialog(this, "El barbero " + barbero + " no trabaja los " + diaSemana.toLowerCase() + ".");
        JComboHORA.removeAllItems();
        JComboHORA.addItem("No trabaja este día");
        return;
    }

    // Obtener horarios disponibles
    List<String> horarios = CitaDAO.obtenerHorariosDisponibles(barbero, diaSemana);
    JComboHORA.removeAllItems();
    JComboHORA.addItem("Seleccione hora...");
    
    // Filtrar horarios que ya están ocupados
    for (String hora : horarios) {
        if (CitaDAO.esDisponible(barbero, fechaStr, hora)) {
            JComboHORA.addItem(hora);
        }
    }
    
    // Si no hay horarios disponibles
    if (JComboHORA.getItemCount() == 1) { // Solo tiene "Seleccione hora..."
        JComboHORA.addItem("Sin horarios disponibles");
    }
}
    
    private void mostrarInformacionEstilo() {
    String seleccion = (String) JcomboTipodeservicio.getSelectedItem();
    
    // Si no hay selección válida o es el placeholder, ocultar el panel
    if (seleccion == null || seleccion.equals("Seleccione Servicio...")) {
        jScrollPane2.setVisible(false);
        jTPdescripcion.setText("");
        return;
    }

    // Obtener información del estilo desde la base de datos
    EstiloCorteDAO.Estilo estilo = EstiloCorteDAO.obtenerEstiloPorNombre(seleccion);
    if (estilo != null) {
        // Formatear la información
       String info = "Descripción:\n" + estilo.descripcion + "\n\n" +
                      "Precio: RD$" + String.format("%.2f", estilo.precio) + "\n\n" +
                      "Tiempo estimado: 1 hora 15 minutos";
        jTPdescripcion.setText(info);
        jTPdescripcion.setCaretPosition(0); // Para que el scroll inicie arriba
        jScrollPane2.setVisible(true); // 👉 Mostrar solo si hay info
    } else {
        jScrollPane2.setVisible(false);
        jTPdescripcion.setText("");
    }
}
    /*ha sido comentado debido a cambios implementados por Ana. se ha querido dar la bienvenida a los usuarios y debido a conflictos con la variable emailUsuario, ha 
    **optado por comentar los main, un poco mas de investigacion de su parte le ha revelado que no todos lo frame deben llevar main, si no el frame principal que en este caso seria
    ** el iniciar sesion y que los frame que deben pasar por el no deberian llevar main*/
    
    /*public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AgendarCita().setVisible(true);
            }
        });
    }   */


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton JBagendarcita;
    private javax.swing.JButton JBcancelar;
    private javax.swing.JComboBox<String> JComboElegirbarbero;
    private javax.swing.JComboBox<String> JComboHORA;
    private javax.swing.JComboBox<String> JComboLugarcita;
    private javax.swing.JLabel JLElegirbarbero;
    private javax.swing.JLabel JLTituloAgendarcita;
    private javax.swing.JLabel JLfechadelacita;
    private javax.swing.JLabel JLfondo;
    private javax.swing.JLabel JLhora;
    private javax.swing.JLabel JLlugarcita;
    private javax.swing.JLabel JLnotasadicionales;
    private javax.swing.JLabel JLtipodeservicio;
    private javax.swing.JScrollPane JSPnotasadicionales;
    private com.toedter.calendar.JCalendar Jcalendario;
    private javax.swing.JComboBox<String> JcomboTipodeservicio;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextPane jTPdescripcion;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField txtGuardarFecha;
    // End of variables declaration//GEN-END:variables
}
