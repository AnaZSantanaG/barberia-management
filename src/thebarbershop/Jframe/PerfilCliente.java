package thebarbershop.Jframe;
import java.awt.Graphics;
import java.awt.Image;
import javax.swing.JOptionPane;
import thebarbershop.utilidades.*;
import thebarbershop.*;
import thebarbershop.utilidades.ClienteDAO;
import javax.imageio.ImageIO;
import java.awt.image.BufferedImage;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import javax.swing.ImageIcon;
/**
 *
 * @author jaelj
 */
public class PerfilCliente extends javax.swing.JFrame {
    private final String emailUsuario; // ← Aquí se DECLARA (como variable de la ventana)
    /**
     * Creates new form Perfil
     * @param email
     */
    public PerfilCliente(String email) {
        this.emailUsuario = email; // ← Aquí se GUARDA el correo de sesión
        initComponents();
        setLocationRelativeTo(null);
        cargarDatosPerfil();// ← Usa emailUsuario para cargar los datos
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        JLtitulo = new javax.swing.JLabel();
        JLfotoperfil = new javax.swing.JLabel();
        JBicono = new javax.swing.JButton();
        JBciudad = new javax.swing.JLabel();
        JCOMBOciudad = new javax.swing.JComboBox<>();
        JLnombre = new javax.swing.JLabel();
        JTnombre = new javax.swing.JTextField();
        JLcorreo = new javax.swing.JLabel();
        JTcorreo = new javax.swing.JTextField();
        JLtelefono = new javax.swing.JLabel();
        JFtelefono = new javax.swing.JFormattedTextField();
        JLcontraseña = new javax.swing.JLabel();
        JPcontraseña = new javax.swing.JPasswordField();
        JBguardar = new javax.swing.JButton();
        JBeliminarPerfil = new javax.swing.JButton();
        JBvolveralmenu = new javax.swing.JButton();
        JLfondo = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("TheBarberShop - Mi Perfil");
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setPreferredSize(new java.awt.Dimension(920, 500));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        JLtitulo.setFont(new java.awt.Font("Copperplate Gothic Bold", 1, 36)); // NOI18N
        JLtitulo.setForeground(new java.awt.Color(255, 255, 255));
        JLtitulo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        JLtitulo.setText("Mi Perfil");
        jPanel1.add(JLtitulo, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 20, 340, 60));

        JLfotoperfil.setFont(new java.awt.Font("Copperplate Gothic Light", 1, 18)); // NOI18N
        JLfotoperfil.setForeground(new java.awt.Color(255, 255, 255));
        JLfotoperfil.setText("Foto de perfil");
        jPanel1.add(JLfotoperfil, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 100, -1, 30));

        JBicono.setText("jButton3");
        JBicono.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBiconoActionPerformed(evt);
            }
        });
        jPanel1.add(JBicono, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 130, 150, 140));

        JBciudad.setBackground(new java.awt.Color(255, 255, 255));
        JBciudad.setFont(new java.awt.Font("Copperplate Gothic Light", 1, 18)); // NOI18N
        JBciudad.setForeground(new java.awt.Color(255, 255, 255));
        JBciudad.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        JBciudad.setText("Ciudad");
        jPanel1.add(JBciudad, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 290, 190, 30));

        JCOMBOciudad.setBackground(new java.awt.Color(51, 51, 51));
        JCOMBOciudad.setFont(new java.awt.Font("Copperplate Gothic Light", 1, 14)); // NOI18N
        JCOMBOciudad.setForeground(new java.awt.Color(255, 255, 255));
        JCOMBOciudad.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione...", "Santo Domingo", "Santiago", "San Cristóbal", "San Pedro de Macorís" }));
        jPanel1.add(JCOMBOciudad, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 320, 200, 50));

        JLnombre.setFont(new java.awt.Font("Copperplate Gothic Light", 1, 18)); // NOI18N
        JLnombre.setForeground(new java.awt.Color(255, 255, 255));
        JLnombre.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        JLnombre.setText("Nombre");
        jPanel1.add(JLnombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 100, 180, 30));

        JTnombre.setBackground(new java.awt.Color(153, 153, 153));
        JTnombre.setForeground(new java.awt.Color(0, 0, 0));
        JTnombre.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jPanel1.add(JTnombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 130, 240, 50));

        JLcorreo.setFont(new java.awt.Font("Copperplate Gothic Light", 1, 18)); // NOI18N
        JLcorreo.setForeground(new java.awt.Color(255, 255, 255));
        JLcorreo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        JLcorreo.setText("Correo");
        jPanel1.add(JLcorreo, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 100, 240, 30));

        JTcorreo.setBackground(new java.awt.Color(153, 153, 153));
        JTcorreo.setForeground(new java.awt.Color(0, 0, 0));
        JTcorreo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JTcorreoActionPerformed(evt);
            }
        });
        jPanel1.add(JTcorreo, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 130, 240, 50));

        JLtelefono.setFont(new java.awt.Font("Copperplate Gothic Light", 1, 18)); // NOI18N
        JLtelefono.setForeground(new java.awt.Color(255, 255, 255));
        JLtelefono.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        JLtelefono.setText("Telefono");
        jPanel1.add(JLtelefono, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 190, 240, 30));

        JFtelefono.setBackground(new java.awt.Color(153, 153, 153));
        JFtelefono.setForeground(new java.awt.Color(0, 0, 0));
        try {
            JFtelefono.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("(###) ###-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jPanel1.add(JFtelefono, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 220, 240, 50));

        JLcontraseña.setFont(new java.awt.Font("Copperplate Gothic Light", 1, 18)); // NOI18N
        JLcontraseña.setForeground(new java.awt.Color(255, 255, 255));
        JLcontraseña.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        JLcontraseña.setText("Contraseña");
        jPanel1.add(JLcontraseña, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 190, 240, 30));

        JPcontraseña.setBackground(new java.awt.Color(153, 153, 153));
        JPcontraseña.setForeground(new java.awt.Color(0, 0, 0));
        jPanel1.add(JPcontraseña, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 220, 240, 50));

        JBguardar.setBackground(new java.awt.Color(13, 73, 11));
        JBguardar.setFont(new java.awt.Font("Copperplate Gothic Light", 1, 14)); // NOI18N
        JBguardar.setForeground(new java.awt.Color(255, 255, 255));
        JBguardar.setText("Guardar");
        JBguardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBguardarActionPerformed(evt);
            }
        });
        jPanel1.add(JBguardar, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 410, 150, 40));

        JBeliminarPerfil.setBackground(new java.awt.Color(153, 0, 51));
        JBeliminarPerfil.setFont(new java.awt.Font("Copperplate Gothic Light", 1, 14)); // NOI18N
        JBeliminarPerfil.setForeground(new java.awt.Color(255, 255, 255));
        JBeliminarPerfil.setText("Eliminar ");
        JBeliminarPerfil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBeliminarPerfilActionPerformed(evt);
            }
        });
        jPanel1.add(JBeliminarPerfil, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 410, 150, 40));

        JBvolveralmenu.setBackground(new java.awt.Color(153, 153, 153));
        JBvolveralmenu.setFont(new java.awt.Font("Copperplate Gothic Light", 1, 18)); // NOI18N
        JBvolveralmenu.setForeground(new java.awt.Color(51, 51, 51));
        JBvolveralmenu.setText("Volver ");
        JBvolveralmenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBvolveralmenuActionPerformed(evt);
            }
        });
        jPanel1.add(JBvolveralmenu, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 410, 150, 40));

        JLfondo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/images/imagen10(1).jpg"))); // NOI18N
        jPanel1.add(JLfondo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 920, 500));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 920, 500));
        jPanel1.getAccessibleContext().setAccessibleName("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void JTcorreoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JTcorreoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_JTcorreoActionPerformed

    private void JBvolveralmenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBvolveralmenuActionPerformed
        this.dispose();
        new MenuCliente(emailUsuario).setVisible(true);
    }//GEN-LAST:event_JBvolveralmenuActionPerformed

    private void JBiconoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBiconoActionPerformed
        // TODO add your handling code here:
                IconPerfilcliente selector = new IconPerfilcliente(JBicono);
                selector.setVisible(true);
    }//GEN-LAST:event_JBiconoActionPerformed

    private void JBguardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBguardarActionPerformed
            // 1. Validar campos
        if (!Validaciones.validarNombre(JTnombre)) return;

        String telefonoFormateado = JFtelefono.getText();
        if (!Validaciones.validarTelefono(telefonoFormateado)) return;
        String telefono = telefonoFormateado.replaceAll("[^0-9]", "");

        if (!Validaciones.validarCiudad(JCOMBOciudad)) return;
        String ciudad = (String) JCOMBOciudad.getSelectedItem();

        // 2. Verificar correo no cambiado (el email es readonly en el perfil)
        String correo = emailUsuario; // Usar el email de la sesión, no el del campo

        // 3. Procesar contraseña
        String contrasena = new String(JPcontraseña.getPassword()).trim();
        String contrasenaEncriptada = null;
        if (!contrasena.isEmpty()) {
            if (!Validaciones.validarContraseña(JPcontraseña)) return;
            contrasenaEncriptada = Seguridad.encriptarContraseña(contrasena);
        }

        // 4. Obtener foto de perfil (si existe)
        byte[] fotoPerfil = null;
        if (JBicono.getIcon() != null && JBicono.getIcon() instanceof ImageIcon) {
            ImageIcon icon = (ImageIcon) JBicono.getIcon();

            // Verificar que no sea la imagen por defecto
            if (!JBicono.getText().equals("Subir foto")) {
                BufferedImage bi = new BufferedImage(
                    icon.getIconWidth(),
                    icon.getIconHeight(),
                    BufferedImage.TYPE_INT_RGB);
                Graphics g = bi.createGraphics();

                // Fondo blanco para evitar transparencias problemáticas
                g.setColor(java.awt.Color.WHITE);
                g.fillRect(0, 0, bi.getWidth(), bi.getHeight());

                icon.paintIcon(null, g, 0, 0);
                g.dispose();

                ByteArrayOutputStream baos = new ByteArrayOutputStream();
                try {
                    ImageIO.write(bi, "jpg", baos);
                    fotoPerfil = baos.toByteArray();
                    //System.out.println("Foto de perfil procesada: " + fotoPerfil.length + " bytes");
                } catch (IOException e) {
                    //System.out.println("Error al procesar imagen: " + e.getMessage());
                    e.printStackTrace();
                }
            }
        }

        // 5. Crear y actualizar cliente
        Cliente cliente = new Cliente(
            correo,                    // email
            JTnombre.getText().trim(), // nombre
            telefono,                  // teléfono
            ciudad,                    // ciudad
            contrasenaEncriptada != null ? contrasenaEncriptada : "", // contraseña
            fotoPerfil                 // foto
        );

        if (ClienteDAO.actualizarCliente(cliente)) {
            JOptionPane.showMessageDialog(this, "Perfil actualizado correctamente.", 
                                        "Éxito", JOptionPane.INFORMATION_MESSAGE);
            JPcontraseña.setText("");
        } else {
            JOptionPane.showMessageDialog(this, "No se pudo actualizar el perfil. Verifique los datos.", 
                                        "Error", JOptionPane.ERROR_MESSAGE);
        }         
    }//GEN-LAST:event_JBguardarActionPerformed

    private void JBeliminarPerfilActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBeliminarPerfilActionPerformed
        thebarbershop.utilidades.EliminarPerfil.eliminarPerfilCliente(this, emailUsuario);
    }//GEN-LAST:event_JBeliminarPerfilActionPerformed

    private void cargarDatosPerfil() {
    Cliente cliente = ClienteDAO.obtenerClientePorEmail(emailUsuario);
    if (cliente != null) {
        JTnombre.setText(cliente.getNombre());
        JTcorreo.setText(cliente.getEmail());
        JTcorreo.setEditable(false); // Hacer que el email no sea editable
        
        // Formatear teléfono con máscara
        String telefono = cliente.getTelefono();
        if (telefono != null && telefono.length() >= 10) {
            String telefonoFormateado = String.format("(%s) %s-%s",
                telefono.substring(0, 3),
                telefono.substring(3, 6),
                telefono.substring(6));
            JFtelefono.setText(telefonoFormateado);
        }
        
        // Seleccionar ciudad en el combo
        String ciudadDB = cliente.getCiudad();
        if (ciudadDB != null) {
            for (int i = 0; i < JCOMBOciudad.getItemCount(); i++) {
                String item = JCOMBOciudad.getItemAt(i);
                if (item.equalsIgnoreCase(ciudadDB.trim())) {
                    JCOMBOciudad.setSelectedIndex(i);
                    break;
                }
            }
        }

        // Cargar foto de perfil
        byte[] foto = cliente.getFotoPerfil();
        if (foto != null && foto.length > 0) {
            mostrarImagenEnBoton(foto);
        } else {
            JBicono.setText("Subir foto");
            JBicono.setIcon(null);
        }
    } else {
        JOptionPane.showMessageDialog(this, "No se encontraron datos del cliente.", "Error", JOptionPane.ERROR_MESSAGE);
    }
}
    
    private void mostrarImagenEnBoton(byte[] imageBytes) {
        try {
            BufferedImage img = ImageIO.read(new ByteArrayInputStream(imageBytes));
            if (img != null) {
                // Redimensionar imagen para que se ajuste al botón
                int btnWidth = JBicono.getWidth() > 0 ? JBicono.getWidth() : 150;
                int btnHeight = JBicono.getHeight() > 0 ? JBicono.getHeight() : 140;

                Image scaledImg = img.getScaledInstance(btnWidth, btnHeight, Image.SCALE_SMOOTH);
                ImageIcon icon = new ImageIcon(scaledImg);

                JBicono.setIcon(icon);
                JBicono.setText(""); // Quitar texto cuando hay imagen
                System.out.println("Imagen cargada exitosamente");
            }
        } catch (IOException e) {
            System.out.println("Error al cargar imagen: " + e.getMessage());
            e.printStackTrace();
            JBicono.setText("Error en imagen");
            JBicono.setIcon(null);
        }
    }

    
    /*ha sido comentado debido a cambios implementados por Ana. se ha querido dar la bienvenida a los usuarios y debido a conflictos con la variable emailUsuario, ha 
    **optado por comentar los main, un poco mas de investigacion de su parte le ha revelado que no todos lo frame deben llevar main, si no el frame principal que en este caso seria
    ** el iniciar sesion y que los frame que deben pasar por el no deberian llevar main*/
    
    
    /**
     * @param args the command line arguments
     */
    /*public static void main(String args[]) {
        
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PerfilCliente(emailUsuario).setVisible(true);
            }
        });
    }*/

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel JBciudad;
    private javax.swing.JButton JBeliminarPerfil;
    private javax.swing.JButton JBguardar;
    private javax.swing.JButton JBicono;
    private javax.swing.JButton JBvolveralmenu;
    private javax.swing.JComboBox<String> JCOMBOciudad;
    private javax.swing.JFormattedTextField JFtelefono;
    private javax.swing.JLabel JLcontraseña;
    private javax.swing.JLabel JLcorreo;
    private javax.swing.JLabel JLfondo;
    private javax.swing.JLabel JLfotoperfil;
    private javax.swing.JLabel JLnombre;
    private javax.swing.JLabel JLtelefono;
    private javax.swing.JLabel JLtitulo;
    private javax.swing.JPasswordField JPcontraseña;
    private javax.swing.JTextField JTcorreo;
    private javax.swing.JTextField JTnombre;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
